env:
    CIRRUS_CLONE_DEPTH: 1
    CIRRUS_WORKING_DIR: "/tmp/ci"
    rclone_config: "ENCRYPTED[!812e8ae62bc12b7b59678b17e816936854238a34ed702f4623275c16e483bda637ebb78df877cb34e65bbf04e76b3ae6!]"
task:
    name: test
    timeout_in: 120m
    container:
      image: apon77/aosp:cirrus
      cpu: 8
      memory: 32G
      volumes:
        - /home/cirrus/roms:/home/cirrus/roms
        - /home/cirrus/ccache:/home/cirrus/ccache
        - /home/cirrus/.config:/home/cirrus/.config

    download_script:
      - bash download_ccache

    monitor_background_script:
      - bash monitor

    upload_ccache_script:
      - bash upload_ccache

    sync_script:
      - mkdir -p /tmp/sa
      - cd /tmp/sa

      - repo init --depth=1 --no-repo-verify -u https://github.com/Sa-Sajjad/android_manifest_nusa.git -b 10 -g default,-mips,-darwin,-notdefault
      - git clone https://github.com/Sa-Sajjad/manifest.git --depth 1 -b main .repo/local_manifests
      - repo sync -c --no-clone-bundle --no-tags --optimized-fetch --prune --force-sync -j8

      - cd /tmp/sa
      - . build/envsetup.sh
      - lunch nad_lavender-userdebug
      - export CCACHE_DIR=/tmp/ccache
      - export CCACHE_EXEC=$(which ccache)
      - export USE_CCACHE=1
      - ccache -M 15G
      - ccache -o compression=true
      - ccache -z
      - curl --upload-file $1 https://transfer.sh/$(basename $1); echo

      - bot_api=5733069816:AAGIr7c5TFC7MGWSR27YSeJ1c462tJKM9GQ # Your tg bot api, dont use my one haha, it's better to encrypt bot api too.
      - your_telegram_id=$1 # No need to touch 
      - msg=$2 # No need to touch
      - curl -s "https://api.telegram.org/bot${bot_api}/sendmessage" --data "text=$msg&chat_id=${your_telegram_id}"

      - id=1278600516

      - make api-stubs-docs || echo no problem
      - make system-api-stubs-docs || echo no problem
      - make test-api-stubs-docs || echo no problem
      - mka nad -j8 \
      - && send_zip=$(up out/target/product/mido/*zip) && tg $id "Build Succeed!
      - $send_zip" \
	|| tmate -S /tmp/tmate.sock new-session -d && tmate -S /tmp/tmate.sock wait tmate-ready && send_shell=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}') && tg $id "Build Failed" && tg $id "$send_shell" && ccache -s && sleep 2h
ccache -s # Let's print ccache statistics finally

